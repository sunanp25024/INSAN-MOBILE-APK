
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to get user's role from the 'users' collection
    function getUserRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }
    
    // Helper function to check if the user is a manager (PIC or higher)
    function isManager() {
      return request.auth != null && getUserRole(request.auth.uid) in ['MasterAdmin', 'Admin', 'PIC'];
    }
    
    // Helper function to check if the user is an Admin or higher
    function isAdminOrHigher() {
      return request.auth != null && getUserRole(request.auth.uid) in ['MasterAdmin', 'Admin'];
    }

    // USERS collection
    match /users/{userId} {
      // Allow a user to read their own profile.
      // Allow managers to read any user profile.
      allow get: if request.auth != null && (request.auth.uid == userId || isManager());
      
      // Allow managers to list users for management pages.
      allow list: if isManager();
      
      // Only Admins/MasterAdmins can create users directly.
      allow create: if isAdminOrHigher();
      
      // Users can update their own data. Admins can update anyone.
      // PICs are handled by approval flow, this rule is for the server-side action.
      allow update: if request.auth != null && (request.auth.uid == userId || isAdminOrHigher());
      
      // Only Admins/MasterAdmins can delete users directly.
      allow delete: if isAdminOrHigher();
    }

    // APPROVAL_REQUESTS collection
    match /approval_requests/{requestId} {
      // The requester or an Admin/MasterAdmin can see a specific request.
      allow get: if request.auth != null && (resource.data.requestedByUid == request.auth.uid || isAdminOrHigher());
        
      // Admins/MasterAdmins can list all requests.
      // PICs/Admins can list only the requests they created.
      allow list: if request.auth != null && (isAdminOrHigher() || request.query.where[0][2] == request.auth.uid);
      
      // PICs and Admins can create approval requests.
      allow create: if request.auth != null && getUserRole(request.auth.uid) in ['PIC', 'Admin'];
        
      // Only Admins/MasterAdmins can update (approve/reject) a request.
      allow update: if isAdminOrHigher();
      
      // No one should delete approval requests, to maintain an audit trail.
      allow delete: if false;
    }

    // ATTENDANCE collection
    match /attendance/{attendanceId} {
      // A Kurir can read/write their own attendance.
      // Managers can read any attendance record for reports.
      allow get, list: if isManager();
      allow create, update: if request.auth != null && request.resource.data.kurirUid == request.auth.uid;
    }
    
    // KURIR_DAILY_TASKS collection and all subcollections (e.g., packages)
    match /kurir_daily_tasks/{taskId}/{documents=**} {
        // A Kurir can manage their own tasks.
        // Managers can read any task data for monitoring.
        allow read: if isManager() || (request.auth.uid != null && request.auth.uid == get(/databases/$(database)/documents/kurir_daily_tasks/$(taskId)).data.kurirUid);
        allow write: if request.auth.uid != null && request.auth.uid == get(/databases/$(database)/documents/kurir_daily_tasks/$(taskId)).data.kurirUid;
    }
    
    // NOTIFICATIONS collection (for MasterAdmin and Admin)
    match /notifications/{notificationId} {
      allow read, write: if isAdminOrHigher();
    }
  }
}
