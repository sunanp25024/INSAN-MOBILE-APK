rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to make rules more readable.
    function isOneOfRoles(roles) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in roles;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users Collection Rules
    match /users/{userId} {
      // MasterAdmins, Admins, and PICs can read user profiles.
      // A user can read their own profile.
      allow read: if request.auth != null && (isOneOfRoles(['MasterAdmin', 'Admin', 'PIC']) || isOwner(userId));
      
      // User creation is handled by secure server-side admin actions.
      // Users can update their own profile on the settings page.
      allow create: if false; 
      allow update: if request.auth != null && isOwner(userId);
      allow delete: if false;
    }

    // Approval Requests Collection Rules
    match /approval_requests/{requestId} {
      // *** THIS IS THE FIX FOR YOUR ISSUE ***
      // Allow authenticated PICs and Admins to create new approval requests,
      // and ensure they are creating it on their own behalf.
      allow create: if request.auth != null 
                    && isOneOfRoles(['Admin', 'PIC'])
                    && request.resource.data.requestedByUid == request.auth.uid;

      // MasterAdmins/Admins can read all requests.
      // PICs/Admins can only read requests they created.
      allow read: if request.auth != null && 
                  (isOneOfRoles(['MasterAdmin', 'Admin']) || resource.data.requestedByUid == request.auth.uid);
      
      // Updates and deletes are handled by secure server functions only.
      allow update, delete: if false;
    }

    // Attendance Collection Rules
    match /attendance/{attendanceId} {
      // A courier can only read/write their own attendance record.
      // Document ID format is: {kurirUid}_{yyyy-MM-dd}
      allow read, write: if request.auth != null && isOwner(attendanceId.split('_')[0]);
    }
    
    // Kurir Daily Tasks Collection Rules
    match /kurir_daily_tasks/{taskId} {
      // A courier can only read/write their own daily task.
      // Document ID format is: {kurirUid}_{yyyy-MM-dd}
      allow read, write: if request.auth != null && isOwner(taskId.split('_')[0]);

      // Packages Subcollection Rules
      match /packages/{packageId} {
        // The courier can read/write packages within their own daily task document.
        allow read, write: if request.auth != null && isOwner(taskId.split('_')[0]);
      }
    }
    
    // Notifications Collection Rules
    match /notifications/{notificationId} {
      // Only Admins and MasterAdmins can read system notifications.
      allow read: if request.auth != null && isOneOfRoles(['MasterAdmin', 'Admin']);
      
      // Notifications can only be created by the server.
      allow write: if false;
    }
  }
}
